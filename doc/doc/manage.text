Manage a Camelot project
========================

Once a project has been created and set up as described in the basics tutorial, it needs
to be maintained and managed over time.

Two tools exist to assist in the management of Camelot projects :

 * camelot/bin/camelot-admin.py is oriented towards developers of the project, it is used for
   the creation of projects and the creation of schema revisions.
   
 * camelot/bin/manage.py is oriented towards administrators of an installed camelot project, it
   is used for interacting with and migration of the database to a certain schema revision.
   
Both tools support the --help command line argument to provide a list of available commands.

  python camelot/bin/manage.py --help
 
Command line interaction with the model
---------------------------------------

  python camelot/bin/manage.py console
  
launches a python console with the model all setup for interaction.  Within the example
movie project one could do within the console :

  from model import Movie
  for movie in Movie.query.all():
    print movie.title
    
to print a list of all movie titles to the screen.

Schema revisions and migrations
-------------------------------

Camelot makes use of the sqlalchemy-migrate library to assist with schema revisions and
migrations.  When creating a new project, the camelot-admin.py tool creates a schema
repository for your project in the repository directory in the project path.



  